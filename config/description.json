{
  "application": {
    "name": "Todo App",
    "description": "<p>This is a sample application to demostrate the server side of an Erstwhile Framework application.</p><p>Of particular interest is this description, which is used to build the client-side model layer through introspection. If the application is not in production mode (based on the environment variable <code>ENVIRONMENT</code>) you can access the JSON version of this document via <code><a href=\"/describe\">/describe</a></code> and the HTML version via <code><a href=\"/describe?format=html\">/describe?format=html</a></code></p>",
    "sessionKey": {
      "type": "custom-header",
      "header": "X-Session"
    }
  },
  "authentication": {
    "login": [
      {
        "name": "login",
        "endpoint": "/authentication/login",
        "method": "post",
        "type": "username-password",
        "return": {
          "type": "json",
          "payload": {
            "type":"object",
            "fields": [
              {
                "key":"sessionKey",
                "type": "sessionKey"
              },
              {
                "key":"user",
                "type":"object",
                "entity":"user"
              }
            ]
          }
        },
        "description": "<p>A standard username/password login. The username field can be either the user's username or email address.</p>",
        "fields": {
          "type": "json",
          "payload" : {
            "type": "object",
            "fields": [
              {
                "key": "username",
                "type": "text",
                "required": true
              },
              {
                "key": "password",
                "type": "password",
                "required": true
              }
            ]
          }
        }
      }
    ],
    "forgotPassword": {
      "name": "forgotPassword",
      "endpoint": "/authentication/forgotPassword",
      "method": "post",
      "description": "<p>A standard password reset email form.</p>",
      "fields": {
        "type": "json",
        "payload" : {
          "type": "object",
          "fields": [
            {
              "key": "email",
              "type": "email",
              "required": true
            }
          ]
        }
      }
    },
    "currentUser": {
      "name": "current",
      "endpoint": "/user/current",
      "method": "get",
      "requiresAuthentication": true,
      "description": "<p>This returns the user object for the currently logged in user.</p>",
      "return": {
        "type": "json",
        "payload": {
          "type":"object",
          "entity":"user"   
        }
      }
    },
    "signup": [
      {
        "name": "signup",
        "endpoint": "/authentication/signup",
        "method": "post",
        "description": "<p>A standard signup form.</p>",
        "fields": {
          "type": "json",
          "payload" : {
            "type": "object",
            "fields": [
              {
                "key": "email",
                "type": "email",
                "required": true
              },
              {
                "key": "username",
                "type": "slug",
                "required": true
              },
              {
                "key": "password",
                "type": "password",
                "required": true
              },
              {
                "key": "firstName",
                "type": "text",
                "required": true
              },
              {
                "key": "lastName",
                "type": "text",
                "required": true
              }
            ]
          }
        }
      }
    ]
  },
  "enums": {
    "colorCodes": {
      "name": "Color Codes",
      "description":"<p>These are the default colors to choose from when creating todos.</p>",
      "options": [
        {
          "text": "Red",
          "value": "#F00"
        },
        {
          "text": "Green",
          "value": "#0F0"
        },
        {
          "text": "Blue",
          "value": "#00F"
        }
      ]
    }
  },
  "entities": {
    "todo": {
      "name": "Todo",
      "plural": "Todos",
      "table": "todos",
      "description": "<p>A Todo is a dated note to do some activity.</p>",
      "fields": [
        {
          "key": "id",
          "name": "ID",
          "type": "uuid",
          "required":false,
          "description":"<p>Nullable for new todos, required otherwise.</p>"
        },
        {
          "key":"title",
          "name": "Title",
          "type": "text",
          "required": true
        },
        {
          "key":"color",
          "name": "Color",
          "type": "color",
          "enum": "colorCodes",
          "allowNew": true,
          "required": true
        },
        {
          "key": "fullText",
          "name": "Description",
          "type": "html",
          "required": true
        },
        {
          "key": "date",
          "name": "Date",
          "type": "datetime",
          "required": false
        },
        {
          "key": "userID",
          "name": "User ID",
          "type": "reference",
          "entity": "user",
          "hidden": true
        }
      ],
      "methods": [
        {
          "name": "list",
          "requiresAuthentication":true,
          "endpoint": "/todo/list",
          "method": "get",
          "return": {
            "type": "json",
            "payload": {
              "type": "object",
              "fields": [
                {
                  "key":"data",
                  "type":"object",
                  "array": true,
                  "entity": "todo"
                },
                {
                  "key": "page",
                  "type": "integer"
                },
                {
                  "key": "total",
                  "type": "integer"
                }
              ]
            }
          },
          "description": "<p>Returns a list of todos for the requesting user. The data is paginated with a default of 10 items per page.</p>",
          "fields": {
            "type": "query",
            "fields": [
              {
                "key": "page",
                "type": "integer",
                "required": false,
                "default": 1
              },
              {
                "key": "numPerPage",
                "type": "integer",
                "required": false,
                "default": 20
              },
              {
                "key": "sort",
                "type": "string",
                "enum": [
                  "date",
                  "title",
                  "color"
                ],
                "required": false,
                "default": "date"
              },
              {
                "key": "sortOrder",
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ],
                "required": false,
                "default": "asc"
              }
            ]
          }
        },
        {
          "name": "get",
          "requiresAuthentication":true,
          "endpoint": "/todo/:todoID",
          "method": "get",
          "return": {
            "type": "json",
            "payload": {
              "type":"object",
              "entity": "todo"
            }
          },
          "description": "<p>Returns a specific todo.</p>"
        },
        {
          "name": "create",
          "requiresAuthentication":true,
          "endpoint": "/todo/create",
          "method": "post",
          "return": {
            "type": "json",
            "payload": {
              "type": "object",
              "entity": "todo"
            }
          },
          "description": "<p>Creates a todo.</p>",
          "fields": {
            "type":"json",
            "payload": {
              "type":"object",
              "entity":"todo"
            }
          }
        },
        {
          "name": "update",
          "requiresAuthentication":true,
          "endpoint": "/todo/:todoID/update",
          "method": "post",
          "return": {
            "type": "json",
            "payload": {
              "type":"object",
              "entity": "todo"
            }
          },
          "description": "<p>Updates a todo.</p>",
          "fields": {
            "type":"json",
            "payload": {
              "type":"object",
              "entity":"todo"
            }
          }
        },
        {
          "name": "delete",
          "requiresAuthentication":true,
          "endpoint": "/todo/:todoID/delete",
          "method": "post",
          "description": "<p>Deletes a todo.</p>"
        }
      ]
    },
    "user": {
      "name": "User",
      "plural": "Users",
      "table": "users",
      "description": "<p>A user is someone who uses the application.</p>",
      "fields": [
        {
          "key" : "id",
          "name": "ID",
          "type": "uuid",
          "required":false
        },
        {
          "key" : "username",
          "name": "Username",
          "type": "slug",
          "required": true
        },
        {
          "key" : "email",
          "name": "Email",
          "type": "email",
          "required": true
        },
        {
          "key" : "firstName",
          "name": "First Name",
          "type": "text",
          "required": true
        },
        {
          "key" : "lastName",
          "name": "Last Name",
          "type": "text",
          "required": true
        }
      ]
    }
  }
}